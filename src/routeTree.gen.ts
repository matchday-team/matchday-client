/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AboutImport } from './routes/about'
import { Route as LoginRouteImport } from './routes/login/route'
import { Route as IndexRouteImport } from './routes/index/route'
import { Route as UsersCreateRouteImport } from './routes/users/create/route'
import { Route as MatchesEntryRouteImport } from './routes/matches/entry/route'
import { Route as MatchesCreateRouteImport } from './routes/matches/create/route'
import { Route as MatchesMatchIdRecordRouteImport } from './routes/matches/$matchId/record/route'

// Create/Update Routes

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const LoginRouteRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const IndexRouteRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const UsersCreateRouteRoute = UsersCreateRouteImport.update({
  id: '/users/create',
  path: '/users/create',
  getParentRoute: () => rootRoute,
} as any)

const MatchesEntryRouteRoute = MatchesEntryRouteImport.update({
  id: '/matches/entry',
  path: '/matches/entry',
  getParentRoute: () => rootRoute,
} as any)

const MatchesCreateRouteRoute = MatchesCreateRouteImport.update({
  id: '/matches/create',
  path: '/matches/create',
  getParentRoute: () => rootRoute,
} as any)

const MatchesMatchIdRecordRouteRoute = MatchesMatchIdRecordRouteImport.update({
  id: '/matches/$matchId/record',
  path: '/matches/$matchId/record',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/matches/create': {
      id: '/matches/create'
      path: '/matches/create'
      fullPath: '/matches/create'
      preLoaderRoute: typeof MatchesCreateRouteImport
      parentRoute: typeof rootRoute
    }
    '/matches/entry': {
      id: '/matches/entry'
      path: '/matches/entry'
      fullPath: '/matches/entry'
      preLoaderRoute: typeof MatchesEntryRouteImport
      parentRoute: typeof rootRoute
    }
    '/users/create': {
      id: '/users/create'
      path: '/users/create'
      fullPath: '/users/create'
      preLoaderRoute: typeof UsersCreateRouteImport
      parentRoute: typeof rootRoute
    }
    '/matches/$matchId/record': {
      id: '/matches/$matchId/record'
      path: '/matches/$matchId/record'
      fullPath: '/matches/$matchId/record'
      preLoaderRoute: typeof MatchesMatchIdRecordRouteImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRouteRoute
  '/login': typeof LoginRouteRoute
  '/about': typeof AboutRoute
  '/matches/create': typeof MatchesCreateRouteRoute
  '/matches/entry': typeof MatchesEntryRouteRoute
  '/users/create': typeof UsersCreateRouteRoute
  '/matches/$matchId/record': typeof MatchesMatchIdRecordRouteRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRouteRoute
  '/login': typeof LoginRouteRoute
  '/about': typeof AboutRoute
  '/matches/create': typeof MatchesCreateRouteRoute
  '/matches/entry': typeof MatchesEntryRouteRoute
  '/users/create': typeof UsersCreateRouteRoute
  '/matches/$matchId/record': typeof MatchesMatchIdRecordRouteRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRouteRoute
  '/login': typeof LoginRouteRoute
  '/about': typeof AboutRoute
  '/matches/create': typeof MatchesCreateRouteRoute
  '/matches/entry': typeof MatchesEntryRouteRoute
  '/users/create': typeof UsersCreateRouteRoute
  '/matches/$matchId/record': typeof MatchesMatchIdRecordRouteRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/about'
    | '/matches/create'
    | '/matches/entry'
    | '/users/create'
    | '/matches/$matchId/record'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/about'
    | '/matches/create'
    | '/matches/entry'
    | '/users/create'
    | '/matches/$matchId/record'
  id:
    | '__root__'
    | '/'
    | '/login'
    | '/about'
    | '/matches/create'
    | '/matches/entry'
    | '/users/create'
    | '/matches/$matchId/record'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRouteRoute: typeof IndexRouteRoute
  LoginRouteRoute: typeof LoginRouteRoute
  AboutRoute: typeof AboutRoute
  MatchesCreateRouteRoute: typeof MatchesCreateRouteRoute
  MatchesEntryRouteRoute: typeof MatchesEntryRouteRoute
  UsersCreateRouteRoute: typeof UsersCreateRouteRoute
  MatchesMatchIdRecordRouteRoute: typeof MatchesMatchIdRecordRouteRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRouteRoute: IndexRouteRoute,
  LoginRouteRoute: LoginRouteRoute,
  AboutRoute: AboutRoute,
  MatchesCreateRouteRoute: MatchesCreateRouteRoute,
  MatchesEntryRouteRoute: MatchesEntryRouteRoute,
  UsersCreateRouteRoute: UsersCreateRouteRoute,
  MatchesMatchIdRecordRouteRoute: MatchesMatchIdRecordRouteRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/login",
        "/about",
        "/matches/create",
        "/matches/entry",
        "/users/create",
        "/matches/$matchId/record"
      ]
    },
    "/": {
      "filePath": "index/route.tsx"
    },
    "/login": {
      "filePath": "login/route.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/matches/create": {
      "filePath": "matches/create/route.tsx"
    },
    "/matches/entry": {
      "filePath": "matches/entry/route.tsx"
    },
    "/users/create": {
      "filePath": "users/create/route.tsx"
    },
    "/matches/$matchId/record": {
      "filePath": "matches/$matchId/record/route.tsx"
    }
  }
}
ROUTE_MANIFEST_END */

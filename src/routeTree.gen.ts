/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginRouteImport } from './routes/login/route'
import { Route as IndexImport } from './routes/index'
import { Route as UsersCreateRouteImport } from './routes/users/create/route'
import { Route as TeamsCreateRouteImport } from './routes/teams/create/route'
import { Route as MatchesEntryRouteImport } from './routes/matches/entry/route'
import { Route as MatchesCreateRouteImport } from './routes/matches/create/route'
import { Route as TeamsTeamIdSchedulesRouteImport } from './routes/teams/$teamId/schedules/route'
import { Route as TeamsTeamIdPlayersRouteImport } from './routes/teams/$teamId/players/route'
import { Route as TeamsTeamIdMatchesRouteImport } from './routes/teams/$teamId/matches/route'
import { Route as MatchesMatchIdRecordRouteImport } from './routes/matches/$matchId/record/route'
import { Route as TeamsTeamIdIndexRouteImport } from './routes/teams/$teamId/index/route'
import { Route as MatchesMatchIdPlayersEditRouteImport } from './routes/matches/$matchId/players/edit/route'
import { Route as TeamsTeamIdNoticesIndexRouteImport } from './routes/teams/$teamId/notices/index/route'

// Create/Update Routes

const LoginRouteRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const UsersCreateRouteRoute = UsersCreateRouteImport.update({
  id: '/users/create',
  path: '/users/create',
  getParentRoute: () => rootRoute,
} as any)

const TeamsCreateRouteRoute = TeamsCreateRouteImport.update({
  id: '/teams/create',
  path: '/teams/create',
  getParentRoute: () => rootRoute,
} as any)

const MatchesEntryRouteRoute = MatchesEntryRouteImport.update({
  id: '/matches/entry',
  path: '/matches/entry',
  getParentRoute: () => rootRoute,
} as any)

const MatchesCreateRouteRoute = MatchesCreateRouteImport.update({
  id: '/matches/create',
  path: '/matches/create',
  getParentRoute: () => rootRoute,
} as any)

const TeamsTeamIdSchedulesRouteRoute = TeamsTeamIdSchedulesRouteImport.update({
  id: '/teams/$teamId/schedules',
  path: '/teams/$teamId/schedules',
  getParentRoute: () => rootRoute,
} as any)

const TeamsTeamIdPlayersRouteRoute = TeamsTeamIdPlayersRouteImport.update({
  id: '/teams/$teamId/players',
  path: '/teams/$teamId/players',
  getParentRoute: () => rootRoute,
} as any)

const TeamsTeamIdMatchesRouteRoute = TeamsTeamIdMatchesRouteImport.update({
  id: '/teams/$teamId/matches',
  path: '/teams/$teamId/matches',
  getParentRoute: () => rootRoute,
} as any)

const MatchesMatchIdRecordRouteRoute = MatchesMatchIdRecordRouteImport.update({
  id: '/matches/$matchId/record',
  path: '/matches/$matchId/record',
  getParentRoute: () => rootRoute,
} as any)

const TeamsTeamIdIndexRouteRoute = TeamsTeamIdIndexRouteImport.update({
  id: '/teams/$teamId/',
  path: '/teams/$teamId/',
  getParentRoute: () => rootRoute,
} as any)

const MatchesMatchIdPlayersEditRouteRoute =
  MatchesMatchIdPlayersEditRouteImport.update({
    id: '/matches/$matchId/players/edit',
    path: '/matches/$matchId/players/edit',
    getParentRoute: () => rootRoute,
  } as any)

const TeamsTeamIdNoticesIndexRouteRoute =
  TeamsTeamIdNoticesIndexRouteImport.update({
    id: '/teams/$teamId/notices/',
    path: '/teams/$teamId/notices/',
    getParentRoute: () => rootRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRoute
    }
    '/matches/create': {
      id: '/matches/create'
      path: '/matches/create'
      fullPath: '/matches/create'
      preLoaderRoute: typeof MatchesCreateRouteImport
      parentRoute: typeof rootRoute
    }
    '/matches/entry': {
      id: '/matches/entry'
      path: '/matches/entry'
      fullPath: '/matches/entry'
      preLoaderRoute: typeof MatchesEntryRouteImport
      parentRoute: typeof rootRoute
    }
    '/teams/create': {
      id: '/teams/create'
      path: '/teams/create'
      fullPath: '/teams/create'
      preLoaderRoute: typeof TeamsCreateRouteImport
      parentRoute: typeof rootRoute
    }
    '/users/create': {
      id: '/users/create'
      path: '/users/create'
      fullPath: '/users/create'
      preLoaderRoute: typeof UsersCreateRouteImport
      parentRoute: typeof rootRoute
    }
    '/teams/$teamId/': {
      id: '/teams/$teamId/'
      path: '/teams/$teamId'
      fullPath: '/teams/$teamId'
      preLoaderRoute: typeof TeamsTeamIdIndexRouteImport
      parentRoute: typeof rootRoute
    }
    '/matches/$matchId/record': {
      id: '/matches/$matchId/record'
      path: '/matches/$matchId/record'
      fullPath: '/matches/$matchId/record'
      preLoaderRoute: typeof MatchesMatchIdRecordRouteImport
      parentRoute: typeof rootRoute
    }
    '/teams/$teamId/matches': {
      id: '/teams/$teamId/matches'
      path: '/teams/$teamId/matches'
      fullPath: '/teams/$teamId/matches'
      preLoaderRoute: typeof TeamsTeamIdMatchesRouteImport
      parentRoute: typeof rootRoute
    }
    '/teams/$teamId/players': {
      id: '/teams/$teamId/players'
      path: '/teams/$teamId/players'
      fullPath: '/teams/$teamId/players'
      preLoaderRoute: typeof TeamsTeamIdPlayersRouteImport
      parentRoute: typeof rootRoute
    }
    '/teams/$teamId/schedules': {
      id: '/teams/$teamId/schedules'
      path: '/teams/$teamId/schedules'
      fullPath: '/teams/$teamId/schedules'
      preLoaderRoute: typeof TeamsTeamIdSchedulesRouteImport
      parentRoute: typeof rootRoute
    }
    '/teams/$teamId/notices/': {
      id: '/teams/$teamId/notices/'
      path: '/teams/$teamId/notices'
      fullPath: '/teams/$teamId/notices'
      preLoaderRoute: typeof TeamsTeamIdNoticesIndexRouteImport
      parentRoute: typeof rootRoute
    }
    '/matches/$matchId/players/edit': {
      id: '/matches/$matchId/players/edit'
      path: '/matches/$matchId/players/edit'
      fullPath: '/matches/$matchId/players/edit'
      preLoaderRoute: typeof MatchesMatchIdPlayersEditRouteImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof LoginRouteRoute
  '/matches/create': typeof MatchesCreateRouteRoute
  '/matches/entry': typeof MatchesEntryRouteRoute
  '/teams/create': typeof TeamsCreateRouteRoute
  '/users/create': typeof UsersCreateRouteRoute
  '/teams/$teamId': typeof TeamsTeamIdIndexRouteRoute
  '/matches/$matchId/record': typeof MatchesMatchIdRecordRouteRoute
  '/teams/$teamId/matches': typeof TeamsTeamIdMatchesRouteRoute
  '/teams/$teamId/players': typeof TeamsTeamIdPlayersRouteRoute
  '/teams/$teamId/schedules': typeof TeamsTeamIdSchedulesRouteRoute
  '/teams/$teamId/notices': typeof TeamsTeamIdNoticesIndexRouteRoute
  '/matches/$matchId/players/edit': typeof MatchesMatchIdPlayersEditRouteRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginRouteRoute
  '/matches/create': typeof MatchesCreateRouteRoute
  '/matches/entry': typeof MatchesEntryRouteRoute
  '/teams/create': typeof TeamsCreateRouteRoute
  '/users/create': typeof UsersCreateRouteRoute
  '/teams/$teamId': typeof TeamsTeamIdIndexRouteRoute
  '/matches/$matchId/record': typeof MatchesMatchIdRecordRouteRoute
  '/teams/$teamId/matches': typeof TeamsTeamIdMatchesRouteRoute
  '/teams/$teamId/players': typeof TeamsTeamIdPlayersRouteRoute
  '/teams/$teamId/schedules': typeof TeamsTeamIdSchedulesRouteRoute
  '/teams/$teamId/notices': typeof TeamsTeamIdNoticesIndexRouteRoute
  '/matches/$matchId/players/edit': typeof MatchesMatchIdPlayersEditRouteRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/login': typeof LoginRouteRoute
  '/matches/create': typeof MatchesCreateRouteRoute
  '/matches/entry': typeof MatchesEntryRouteRoute
  '/teams/create': typeof TeamsCreateRouteRoute
  '/users/create': typeof UsersCreateRouteRoute
  '/teams/$teamId/': typeof TeamsTeamIdIndexRouteRoute
  '/matches/$matchId/record': typeof MatchesMatchIdRecordRouteRoute
  '/teams/$teamId/matches': typeof TeamsTeamIdMatchesRouteRoute
  '/teams/$teamId/players': typeof TeamsTeamIdPlayersRouteRoute
  '/teams/$teamId/schedules': typeof TeamsTeamIdSchedulesRouteRoute
  '/teams/$teamId/notices/': typeof TeamsTeamIdNoticesIndexRouteRoute
  '/matches/$matchId/players/edit': typeof MatchesMatchIdPlayersEditRouteRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/matches/create'
    | '/matches/entry'
    | '/teams/create'
    | '/users/create'
    | '/teams/$teamId'
    | '/matches/$matchId/record'
    | '/teams/$teamId/matches'
    | '/teams/$teamId/players'
    | '/teams/$teamId/schedules'
    | '/teams/$teamId/notices'
    | '/matches/$matchId/players/edit'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/matches/create'
    | '/matches/entry'
    | '/teams/create'
    | '/users/create'
    | '/teams/$teamId'
    | '/matches/$matchId/record'
    | '/teams/$teamId/matches'
    | '/teams/$teamId/players'
    | '/teams/$teamId/schedules'
    | '/teams/$teamId/notices'
    | '/matches/$matchId/players/edit'
  id:
    | '__root__'
    | '/'
    | '/login'
    | '/matches/create'
    | '/matches/entry'
    | '/teams/create'
    | '/users/create'
    | '/teams/$teamId/'
    | '/matches/$matchId/record'
    | '/teams/$teamId/matches'
    | '/teams/$teamId/players'
    | '/teams/$teamId/schedules'
    | '/teams/$teamId/notices/'
    | '/matches/$matchId/players/edit'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LoginRouteRoute: typeof LoginRouteRoute
  MatchesCreateRouteRoute: typeof MatchesCreateRouteRoute
  MatchesEntryRouteRoute: typeof MatchesEntryRouteRoute
  TeamsCreateRouteRoute: typeof TeamsCreateRouteRoute
  UsersCreateRouteRoute: typeof UsersCreateRouteRoute
  TeamsTeamIdIndexRouteRoute: typeof TeamsTeamIdIndexRouteRoute
  MatchesMatchIdRecordRouteRoute: typeof MatchesMatchIdRecordRouteRoute
  TeamsTeamIdMatchesRouteRoute: typeof TeamsTeamIdMatchesRouteRoute
  TeamsTeamIdPlayersRouteRoute: typeof TeamsTeamIdPlayersRouteRoute
  TeamsTeamIdSchedulesRouteRoute: typeof TeamsTeamIdSchedulesRouteRoute
  TeamsTeamIdNoticesIndexRouteRoute: typeof TeamsTeamIdNoticesIndexRouteRoute
  MatchesMatchIdPlayersEditRouteRoute: typeof MatchesMatchIdPlayersEditRouteRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LoginRouteRoute: LoginRouteRoute,
  MatchesCreateRouteRoute: MatchesCreateRouteRoute,
  MatchesEntryRouteRoute: MatchesEntryRouteRoute,
  TeamsCreateRouteRoute: TeamsCreateRouteRoute,
  UsersCreateRouteRoute: UsersCreateRouteRoute,
  TeamsTeamIdIndexRouteRoute: TeamsTeamIdIndexRouteRoute,
  MatchesMatchIdRecordRouteRoute: MatchesMatchIdRecordRouteRoute,
  TeamsTeamIdMatchesRouteRoute: TeamsTeamIdMatchesRouteRoute,
  TeamsTeamIdPlayersRouteRoute: TeamsTeamIdPlayersRouteRoute,
  TeamsTeamIdSchedulesRouteRoute: TeamsTeamIdSchedulesRouteRoute,
  TeamsTeamIdNoticesIndexRouteRoute: TeamsTeamIdNoticesIndexRouteRoute,
  MatchesMatchIdPlayersEditRouteRoute: MatchesMatchIdPlayersEditRouteRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/login",
        "/matches/create",
        "/matches/entry",
        "/teams/create",
        "/users/create",
        "/teams/$teamId/",
        "/matches/$matchId/record",
        "/teams/$teamId/matches",
        "/teams/$teamId/players",
        "/teams/$teamId/schedules",
        "/teams/$teamId/notices/",
        "/matches/$matchId/players/edit"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/login": {
      "filePath": "login/route.tsx"
    },
    "/matches/create": {
      "filePath": "matches/create/route.tsx"
    },
    "/matches/entry": {
      "filePath": "matches/entry/route.tsx"
    },
    "/teams/create": {
      "filePath": "teams/create/route.tsx"
    },
    "/users/create": {
      "filePath": "users/create/route.tsx"
    },
    "/teams/$teamId/": {
      "filePath": "teams/$teamId/index/route.tsx"
    },
    "/matches/$matchId/record": {
      "filePath": "matches/$matchId/record/route.tsx"
    },
    "/teams/$teamId/matches": {
      "filePath": "teams/$teamId/matches/route.tsx"
    },
    "/teams/$teamId/players": {
      "filePath": "teams/$teamId/players/route.tsx"
    },
    "/teams/$teamId/schedules": {
      "filePath": "teams/$teamId/schedules/route.tsx"
    },
    "/teams/$teamId/notices/": {
      "filePath": "teams/$teamId/notices/index/route.tsx"
    },
    "/matches/$matchId/players/edit": {
      "filePath": "matches/$matchId/players/edit/route.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
